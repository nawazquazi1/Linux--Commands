# Display lines from a file that do not contain a specific pattern
grep -v 'pattern' filename

# Display the first 10 lines of a file
head filename

# Display the first 20 lines of a file
head -n 20 filename

# Display the last 10 lines of a file
tail filename

# Display the last 20 lines of a file
tail -n 20 filename

# Display the last 10 lines of a file and keep updating as the file grows
tail -f filename

# Display lines 10 through 20 of a file
sed -n '10,20p' filename

# Print lines that match multiple patterns
grep -E 'pattern1|pattern2' filename

# Filter only lines starting with a specific word
grep '^word' filename

# Filter only lines ending with a specific word
grep 'word$' filename

# Print all lines except the first 10
tail -n +11 filename

# Print only odd-numbered lines from a file
awk 'NR % 2 == 1' filename

# Print only even-numbered lines from a file
awk 'NR % 2 == 0' filename

# Print the nth line of a file
sed -n '5p' filename  # Change 5 to any line number

# Print the last line of a file
awk 'END {print}' filename

# Convert uppercase to lowercase
tr '[:upper:]' '[:lower:]' < filename

# Convert lowercase to uppercase
tr '[:lower:]' '[:upper:]' < filename

# Replace multiple spaces with a single space
tr -s ' ' < filename

# Replace tabs with four spaces
expand -t 4 filename

# Join lines from a file (remove newlines)
tr -d '\n' < filename

# Print a file's contents in reverse line order
tac filename

# Print a file's contents in reverse character order
rev filename

# Replace a pattern only on lines that match another pattern
sed '/pattern1/s/pattern2/replacement/' filename

# Count the occurrences of a specific word in a file
grep -o 'word' filename | wc -l

# Extract email addresses from a file
grep -E -o '[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}' filename

# Extract URLs from a file
grep -E -o 'http[s]?://[a-zA-Z0-9./?=_-]*' filename

# Display only lines containing numbers
grep '[0-9]' filename

# Display only lines containing alphabetic characters
grep '[a-zA-Z]' filename

# Highlight matches when displaying a file
grep --color=always 'pattern' filename | less -R

# Strip leading and trailing whitespace from each line
sed 's/^[ \t]*//;s/[ \t]*$//' filename

# Insert a line before a specific pattern
sed '/pattern/i\New line of text' filename

# Insert a line after a specific pattern
sed '/pattern/a\New line of text' filename

# Delete blank lines from a file
sed '/^$/d' filename

# Remove the first word from each line
sed 's/^[^ ]* //' filename

# Extract the filename from a full path
basename /path/to/file

# Extract the directory from a full path
dirname /path/to/file

# Display the differences between two directories
diff -r dir1/ dir2/

# Display differences between files, ignoring whitespace
diff -w file1 file2

# Replace a string in multiple files
find /path/to/files -type f -exec sed -i 's/old_string/new_string/g' {} +

# Replace a string only in files with a specific extension
find /path/to/files -name '*.txt' -exec sed -i 's/old_string/new_string/g' {} +

# Display only lines containing special characters
grep '[!@#$%^&*()_+]' filename

# Remove all non-numeric characters from a file
tr -cd '0-9\n' < filename

# Remove all non-alphabetic characters from a file
tr -cd 'a-zA-Z\n' < filename

# Compress multiple spaces into one
sed 's/ \{1,\}/ /g' filename

# Remove everything after a specific character on each line
cut -d' ' -f1 filename  # Cut after the first space

# Search for a pattern in a file
grep 'pattern' filename

# Search for a pattern in a file, case-insensitive
grep -i 'pattern' filename

# Search for a pattern recursively in all files within a directory
grep -r 'pattern' /path/to/directory

# Count the number of lines, words, and characters in a file
wc filename

# Count the number of lines in a file
wc -l filename

# Count the number of words in a file
wc -w filename

# Count the number of characters in a file
wc -m filename

# Sort the lines of a file alphabetically
sort filename

# Sort the lines of a file in reverse order
sort -r filename

# Sort the lines of a file numerically
sort -n filename

# Remove duplicate lines from a file (after sorting)
sort filename | uniq

# Remove duplicate lines from a file (without sorting)
uniq filename

# Remove duplicate lines and count occurrences
uniq -c filename

# Display specific columns from a file (e.g., column 1 and 3 from a CSV file)
cut -d',' -f1,3 filename

# Display a range of characters (e.g., characters 2-5 from each line)
cut -c2-5 filename

# Replace all occurrences of a string in a file
sed 's/old_string/new_string/g' filename

# Remove lines matching a pattern
sed '/pattern/d' filename

# Print lines matching a pattern using awk
awk '/pattern/ {print}' filename

# Print specific columns (e.g., column 2) using awk
awk '{print $2}' filename

# Calculate the sum of a column (e.g., column 3) using awk
awk '{sum += $3} END {print sum}' filename

# Find lines with more than 80 characters
awk 'length($0) > 80' filename

# Combine lines from multiple files
paste file1 file2

# Combine lines from multiple files with a delimiter
paste -d',' file1 file2

# Find lines that are common in two files
comm -12 <(sort file1) <(sort file2)

# Find differences between two files
diff file1 file2

# Highlight differences between two files
diff --color file1 file2

# Display only lines present in the first file but not in the second
comm -23 <(sort file1) <(sort file2)

# Reverse the order of characters in each line
rev filename

# Split a file into smaller files with 1000 lines each
split -l 1000 filename

# Print lines that match a pattern, with surrounding context (3 lines before and after)
grep -C 3 'pattern' filename

# Display only unique lines (remove duplicates without sorting)
awk '!seen[$0]++' filename

# Convert tabs to spaces
expand filename

# Convert spaces to tabs
unexpand filename



